#!/bin/sh

# TODO: Make the bookmark file a envvar?
# TODO: Bookmark deletion and overwriting
# TODO: Now it only works with wayland, fix that :P

bk_file="$HOME/.local/bookmarks"
command_name="$(basename "$0")"

# --- UTILITIES ---

msg_handle() {
    echo "$2" > /dev/stderr
    notify-send "$command_name $1" "$2"
}
warn_handle()  { msg_handle warn  "$1"; }
error_handle() { msg_handle error "$2"; exit "$1"; }

# extract the protocol from the URL "https://dendycat" -> "https"
protocol() { echo "$1" | sed 's/^\(.*\):\/\/.*/\1/'; }

openable() {
    _mime="x-scheme-handler/$(protocol "$1")"

    # Use xdg-mime to test if the specified protocol has a program attacked to it
    [ "$(xdg-mime query default "$_mime")" ] \
        && return 0 \
        || return 1
}

# --- ACTIONS ---

# Ask the user graphically and echo the selected URL
choose() {
    _url=$(grep -ve '^#' -e '^$' "$bk_file" | dmenu -l 10 -i -p "Open bookmark:") || {
        # FIXME: Cancelling isn't being properly handled atm
        # Action has been cancelled
        exit 0
    }
    
    echo -n "$_url" | cut -nd" " -f1
}

open() {
    _url=$(choose)

    if openable "$_url"; then
        xdg-open "$_url"
    else
        error_handle 1 "Scheme cannot be open."
    fi
}

copy() { choose | wl-copy; }

add() {
    _url="$(wl-paste)" || \
        error_handle 1 "Couldn't get clipboard's contents."

    echo "$_url" | grep "://" || \
        error_handle 4 "'$_url' is not a URL."

    grep "$_url" "$bk_file" && \
        error_handle 3 "'$_url' already saved."

    openable "$_url" || warn_handle "URL can't be opened by xdg."

    _tags=$(printf "" | dmenu -p "Adding '$_url':") && echo "$_url $_tags" >> "$bk_file"
}

usage() {
cat << _HELP
    $command_name -- manages and opens bookmarks via dmenu

Synopsis

    $command_name [ help | add ]
_HELP
}

edit() {
    ${EDITOR:-vim} $bk_file
}

can_i_use() {
    command -v "$1" > /dev/null
}

# --- DEPENDENCY CHECKING ---

[ "$DISPLAY" ] || \
    error_handle 1 "bk only works under Xorg for now."

can_i_use "xdg-open" || error_handle 2 "$command_name requires 'xdg-open'."
can_i_use "dmenu"    || error_handle 2 "$command_name requires 'dmenu'."

[ "$XDG_SESSION_TYPE" == "wayland" ] && {
    can_i_use "wl-copy" || error_handle 2 "$command_name requires 'wl-copy' for wayland."
} || {
    can_i_use "xclip" || error_handle 2 "$command_name 'xclip' for X11."
}

# --- MAIN ---

[ ! -f "$bk_file" ] && touch "$bk_file"

case "$1" in
    ("")     open  ;;
    ("open") open  ;;
    ("add")  add   ;;
    ("edit") edit  ;;
    ("copy") copy  ;;
    ("help") usage ;;
esac
